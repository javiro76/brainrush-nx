name: Deploy to Digital Ocean

on:
  push:
    branches: [main] # Cambia a 'master' si usas esa rama como principal
    paths-ignore:
      - '**.md' # Ignora cambios en archivos markdown

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build applications
        run: |
          npx nx build api-gateway --prod
          npx nx build auth-service --prod

      - name: Create .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" > .env.prod
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.prod
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env.prod
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.prod
          echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> .env.prod

      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DIGITALOCEAN_HOST }}" ]; then
              echo "Error: DIGITALOCEAN_HOST is not set."
              exit 1
          fi
          if [ -z "${{ secrets.DIGITALOCEAN_USERNAME }}" ]; then
              echo "Error: DIGITALOCEAN_USERNAME is not set."
              exit 1
          fi
          if [ -z "${{ secrets.DIGITALOCEAN_SSH_KEY }}" ]; then
              echo "Error: DIGITALOCEAN_SSH_KEY is not set."
              exit 1
          fi
          # La validación de SSH_PASSPHRASE ya no es necesaria

      - name: Deploy to Digital Ocean (Create Directory)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          debug: true # Mantenido para diagnósticos si es necesario
          script: |
            # Crear directorio del proyecto si no existe
            mkdir -p /home/brainrush/brainrush-app
            # Ir al directorio del proyecto
            cd /home/brainrush/brainrush-app

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          source: 'dist/,docker-compose.prod.yml,.env.prod,apps/*/Dockerfile'
          target: '/home/brainrush/brainrush-app'
          strip_components: 0 # Asegúrate de que esto es lo que quieres. 0 copia la estructura completa.

      - name: Start Docker containers
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            cd /home/brainrush/brainrush-app
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d --build

            # Ejecutar migraciones de Prisma (si aplica)
            docker compose -f docker-compose.prod.yml exec -T auth-service npx prisma migrate deploy

            # Eliminar imágenes antiguas (limpieza)
            docker image prune -af
