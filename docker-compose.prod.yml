# docker-compose.prod.yml - Configuración para entorno de producción
version: '3.8'

services:
  # Servidor NATS para comunicación entre servicios
  nats:
    image: nats:latest
    restart: always
    ports:
      - "127.0.0.1:4222:4222"  # Solo accesible localmente
      - "127.0.0.1:8222:8222"  # Monitoreo solo local
    volumes:
      - nats_data:/data
    command: -js
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/varz"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Base de datos para el servicio de autenticación
  auth-db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-auth_db}
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"  # Solo accesible localmente
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 30s
      timeout: 5s
      retries: 5

  # Servicio de autenticación
  auth-service:
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=3334
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-postgres}@auth-db:5432/${DB_NAME:-auth_db}
      - JWT_SECRET=${JWT_SECRET:-mi_super_secret_key_temporal}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-30m}
      - NATS_URL=nats://nats:4222
    depends_on:
      auth-db:
        condition: service_healthy
      nats:
        condition: service_started
    networks:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3334/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    restart: always
    ports:
      - "3333:3333"  # Será expuesto a través de Nginx
    environment:
      - NODE_ENV=production
      - PORT=3333
      - AUTH_SERVICE_HOST=auth-service
      - AUTH_SERVICE_PORT=3334
      - NATS_URL=nats://nats:4222
      - JWT_SECRET=${JWT_SECRET:-mi_super_secret_key_temporal}
    depends_on:
      - auth-service
    networks:
      - backend
      - frontend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3333/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

networks:
  frontend:
  backend:
    internal: true  # No permite conexiones desde fuera

volumes:
  nats_data:
  auth_db_data:
