# Docker Compose para BrainRush - Plataforma Educativa de Preparaci贸n

services:
  # Servidor NATS para comunicaci贸n entre servicios
  nats:
    image: nats:latest
    ports:
      - "4222:4222"  # Cliente
      - "8222:8222"  # HTTP Monitor
    volumes:
      - nats_data:/data
    command: -js  # Habilitar JetStream
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8222/varz"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  # Base de datos para el servicio de autenticaci贸n
  auth-db:
    image: postgres:14
    container_name: brainrush-auth-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth_db
    ports:
      - "5432:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Servicio de autenticaci贸n
  auth-service:
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile
    container_name: brainrush-auth-service
    ports:
      - "3334:3334"
    environment:
      - PORT=3334
      - DATABASE_URL=postgresql://postgres:postgres@auth-db:5432/auth_db
      - JWT_SECRET=mi_super_secret_key_temporal
      - JWT_EXPIRES_IN=30m
      - NATS_URL=nats://nats:4222
    depends_on:
      auth-db:
        condition: service_healthy
      nats:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3334/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    container_name: brainrush-api-gateway
    ports:
      - "3333:3333"
    environment:
      - PORT=3333
      - AUTH_SERVICE_HOST=auth-service
      - AUTH_SERVICE_PORT=3334
      - NATS_URL=nats://nats:4222
    depends_on:
      - auth-service
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3333/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  nats_data:
  auth_db_data:
